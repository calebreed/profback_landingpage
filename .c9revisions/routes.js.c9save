{"ts":1378577131193,"silentsave":true,"restoring":false,"patch":[[]],"length":0}
{"contributors":[],"silentsave":false,"ts":1378577132784,"patch":[[{"diffs":[[1,"app.get('/',function(req,res,next){\n  res.render('index', { user: req.user });\n});\n\n// render 'index' into 'boilerplate':\n//app.get('/',function(req,res,next){\n  //res.render('index', { what: 'best', who: 'me' });\n//});\n\napp.use(\"/images\", express.static(__dirname + '/images'));\n\napp.get('/account', ensureAuthenticated, function(req, res){\n  res.render('account', { user: req.user });\n});\n\napp.get('/login', function(req, res){\n  res.render('login', { user: req.user });\n});\n\n// GET /auth/google\n// Use passport.authenticate() as route middleware to authenticate the\n// request. The first step in Google authentication will involve\n// redirecting the user to google.com. After authorization, Google\n// will redirect the user back to this application at /auth/google/callback\napp.get('/auth/google',\n  passport.authenticate('google', { scope: ['https://www.googleapis.com/auth/userinfo.profile',\n                                            'https://www.googleapis.com/auth/userinfo.email'] }),\n  function(req, res){\n    // The request will be redirected to Google for authentication, so this\n    // function will not be called.\n  });\n\n// GET /auth/google/callback\n// Use passport.authenticate() as route middleware to authenticate the\n// request. If authentication fails, the user will be redirected back to the\n// login page. Otherwise, the primary route function function will be called,\n// which, in this example, will redirect the user to the home page.\napp.get('/oauth2callback',\n  passport.authenticate('google', { failureRedirect: '/login' } ),\n  function(req, res) {\n    res.redirect('/');\n  });\n\napp.get('/logout', function(req, res){\n  req.logout();\n  res.redirect('/');\n});\n  \n  function ensureAuthenticated(req, res, next) {\n  if (req.isAuthenticated()) { return next(); }\n  res.redirect('/login');\n}"]],"start1":0,"start2":0,"length1":0,"length2":1813}]],"length":1813,"saved":false}
{"ts":1378577204539,"patch":[[{"diffs":[[0,");\n\n"],[-1,"// render 'index' into 'boilerplate':\n//app.get('/',function(req,res,next){\n  //res.render('index', { what: 'best', who: 'me' });\n//});\n\napp.use(\"/images\", express.static(__dirname + '/images'));\n\napp.get('/account', ensureAuthenticated, function(req, res){\n  res.render('account', { user: req.user });\n});\n\napp.get('/login', function(req, res){\n  res.render('login', { user: req.user });\n});\n\n// GET /auth/google\n// Use passport.authenticate() as route middleware to authenticate the\n// request. The first step in Google authentication will involve\n// redirecting the user to google.com. After authorization, Google\n// will redirect the user back to this application at /auth/google/callback\napp.get('/auth/google',\n  passport.authenticate('google', { scope: ['https://www.googleapis.com/auth/userinfo.profile',\n                                            'https://www.googleapis.com/auth/userinfo.email'] }),\n  function(req, res){\n    // The request will be redirected to Google for authentication, so this\n    // function will not be called.\n  });\n\n// GET /auth/google/callback\n// Use passport.authenticate() as route middleware to authenticate the\n// request. If authentication fails, the user will be redirected back to the\n// login page. Otherwise, the primary route function function will be called,\n// which, in this example, will redirect the user to the home page.\napp.get('/oauth2callback',\n  passport.authenticate('google', { failureRedirect: '/login' } ),\n  function(req, res) {\n    res.redirect('/');\n  });\n\napp.get('/logout', function(req, res){\n  req.logout();\n  res.redirect('/');\n});\n  \n  function ensureAuthenticated(req, res, next) {\n  if (req.isAuthenticated()) { return next(); }\n  res.redirect('/login');\n}"],[1,"app.use(\"/images\", express.static(__dirname + '/images'));\n\n"]],"start1":80,"start2":80,"length1":1733,"length2":64}]],"length":144,"saved":false}
{"ts":1378577236535,"patch":[[{"diffs":[[1,"module.exports = function (app) {\n\n"],[0,"app.get('/',"]],"start1":0,"start2":0,"length1":12,"length2":47},{"diffs":[[0,"images'));\n\n"],[1,"};"]],"start1":167,"start2":167,"length1":12,"length2":14}]],"length":181,"saved":false}
{"ts":1378577711871,"patch":[[{"diffs":[[0,");\n\n"],[-1,"app.use(\"/images\", express.static(__dirname + '/images'));"],[0,"\n\n};"]],"start1":115,"start2":115,"length1":66,"length2":8}]],"length":123,"saved":false}
{"ts":1378674640089,"patch":[[{"diffs":[[0,"app) {\n\n"],[1,"//"],[0,"app.get("]],"start1":27,"start2":27,"length1":16,"length2":18},{"diffs":[[0,"next){\n "],[1,"//"],[0," res.ren"]],"start1":66,"start2":66,"length1":16,"length2":18},{"diffs":[[0,"});\n"],[1,"//"],[0,"});\n\n"],[1,"app.get('/', function(req,res){\n    res.sendfile(__dirname + '/index.html');\n  });\n"],[0,"\n\n};"]],"start1":114,"start2":114,"length1":13,"length2":98}]],"length":212,"saved":false}
{"ts":1378674753021,"patch":[[{"diffs":[[0,"name + '"],[1,"views"],[0,"/index.h"]],"start1":179,"start2":179,"length1":16,"length2":21}]],"length":217,"saved":false}
{"ts":1378674754927,"patch":[[{"diffs":[[0,"name + '"],[1,"/"],[0,"views/in"]],"start1":179,"start2":179,"length1":16,"length2":17}]],"length":218,"saved":false}
